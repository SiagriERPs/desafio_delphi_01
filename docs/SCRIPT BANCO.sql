/******************************************************************************/
/*            Generated by IBExpert 2022.3.8.1 06/06/2022 03:10:31            */
/******************************************************************************/

SET SQL DIALECT 3;

SET NAMES ISO8859_2;

CREATE DATABASE 'C:\Aliare\desafio_delphi_01\data\DBALIARE.FDB'
USER 'SYSDBA' PASSWORD 'masterkey'
PAGE_SIZE 16384
DEFAULT CHARACTER SET ISO8859_2;

/* Secondary database files
ALTER DATABASE ADD FILE 'C:\ALIARE\DESAFIO_DELPHI_01\DATA\DBALIARE.FDB';
*/



/******************************************************************************/
/*                                 Generators                                 */
/******************************************************************************/

CREATE GENERATOR GEN_CONTRATO_ID;
SET GENERATOR GEN_CONTRATO_ID TO 6;

CREATE GENERATOR GEN_GRAO_ID;
SET GENERATOR GEN_GRAO_ID TO 9;

CREATE GENERATOR GEN_PRODUTOR_ID;
SET GENERATOR GEN_PRODUTOR_ID TO 5;

CREATE GENERATOR GEN_SILO_ID;
SET GENERATOR GEN_SILO_ID TO 5;

CREATE GENERATOR GEN_SILO_MOVIMENTACAO_ID;
SET GENERATOR GEN_SILO_MOVIMENTACAO_ID TO 22;

CREATE GENERATOR GEN_TRADE_ID;
SET GENERATOR GEN_TRADE_ID TO 3;



/******************************************************************************/
/*                                   Tables                                   */
/******************************************************************************/



CREATE TABLE CONTRATO (
    ID           INTEGER NOT NULL,
    ID_PRODUTOR  INTEGER,
    ID_TRADE     INTEGER,
    ID_GRAO      INTEGER,
    QTDE_GERAL   FLOAT
);

CREATE TABLE GRAO (
    ID         INTEGER NOT NULL,
    DESCRICAO  VARCHAR(100),
    STATUS     VARCHAR(15)
);

CREATE TABLE PRODUTOR (
    ID      INTEGER NOT NULL,
    NOME    VARCHAR(100),
    CNPJ    VARCHAR(14),
    STATUS  VARCHAR(10)
);

CREATE TABLE SILO (
    ID          INTEGER NOT NULL,
    DESCRICAO   VARCHAR(100),
    CAPACIDADE  FLOAT,
    ID_GRAO     INTEGER,
    ID_TRADE    INTEGER,
    STATUS      VARCHAR(10)
);

CREATE TABLE SILO_MOVIMENTACAO (
    ID                  INTEGER NOT NULL,
    ID_CONTRATO         INTEGER,
    ID_SILO             INTEGER,
    QTDE_ARMAZENAMENTO  FLOAT
);

CREATE TABLE TRADE (
    ID         INTEGER NOT NULL,
    DESCRICAO  VARCHAR(100),
    STATUS     VARCHAR(10)
);



/******************************************************************************/
/*                                Primary keys                                */
/******************************************************************************/

ALTER TABLE CONTRATO ADD CONSTRAINT PK_CONTRATO PRIMARY KEY (ID);
ALTER TABLE GRAO ADD PRIMARY KEY (ID);
ALTER TABLE PRODUTOR ADD CONSTRAINT PK_PRODUTOR PRIMARY KEY (ID);
ALTER TABLE SILO ADD CONSTRAINT PK_SILO PRIMARY KEY (ID);
ALTER TABLE SILO_MOVIMENTACAO ADD CONSTRAINT PK_SILO_MOVIMENTACAO PRIMARY KEY (ID);
ALTER TABLE TRADE ADD CONSTRAINT PK_TRADE PRIMARY KEY (ID);


/******************************************************************************/
/*                                Foreign keys                                */
/******************************************************************************/

ALTER TABLE CONTRATO ADD CONSTRAINT FK_CONTRATO_1 FOREIGN KEY (ID_PRODUTOR) REFERENCES PRODUTOR (ID);
ALTER TABLE CONTRATO ADD CONSTRAINT FK_CONTRATO_2 FOREIGN KEY (ID_TRADE) REFERENCES TRADE (ID);
ALTER TABLE CONTRATO ADD CONSTRAINT FK_CONTRATO_3 FOREIGN KEY (ID_GRAO) REFERENCES GRAO (ID);
ALTER TABLE SILO ADD CONSTRAINT FK_SILO_1 FOREIGN KEY (ID_GRAO) REFERENCES GRAO (ID);
ALTER TABLE SILO ADD CONSTRAINT FK_SILO_2 FOREIGN KEY (ID_TRADE) REFERENCES TRADE (ID);
ALTER TABLE SILO_MOVIMENTACAO ADD CONSTRAINT FK_SILO_MOVIMENTACAO_1 FOREIGN KEY (ID_CONTRATO) REFERENCES CONTRATO (ID);
ALTER TABLE SILO_MOVIMENTACAO ADD CONSTRAINT FK_SILO_MOVIMENTACAO_2 FOREIGN KEY (ID_SILO) REFERENCES SILO (ID);


/******************************************************************************/
/*                                  Triggers                                  */
/******************************************************************************/



SET TERM ^ ;



/******************************************************************************/
/*                            Triggers for tables                             */
/******************************************************************************/



/* Trigger: GRAO_BI */
CREATE TRIGGER GRAO_BI FOR GRAO
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_grao_id,1);
end
^

/* Trigger: PRODUTOR_BI */
CREATE TRIGGER PRODUTOR_BI FOR PRODUTOR
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_produtor_id,1);
end
^

/* Trigger: SILO_MOVIMENTACAO_BI */
CREATE TRIGGER SILO_MOVIMENTACAO_BI FOR SILO_MOVIMENTACAO
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_silo_movimentacao_id,1);
end
^

/* Trigger: TRADE_BI */
CREATE TRIGGER TRADE_BI FOR TRADE
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_trade_id,1);
end
^
SET TERM ; ^

